/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/users.js":
/*!*******************************!*\
  !*** ./resources/js/users.js ***!
  \*******************************/
/***/ (() => {

eval("\n\n$(function () {\n  $('#users__add_btn').click(function () {\n    if (group != 1) {\n      $('#modal_users_add__group_id').html('');\n      allRoles.forEach(function (role) {\n        if (permissions.includes('user.create.role.' + role.id)) {\n          $('#modal_users_add__group_id').append(new Option(role.name, role.id));\n        }\n      });\n    }\n\n    $('.dz-preview').remove();\n    $('.dz-message').show();\n    $('#modal_users_add__id').val('');\n    $('#modal_users_add__email').val('');\n    $('#modal_users_add__password').val('');\n    $('#modal_users_add__firstName').val('');\n    $('#modal_users_add__lastName').val('');\n    $('#modal_users_add__phone').val('');\n    $('#modal_users_add__account').val('');\n    $('#modal_users_leads_companies_select').html('');\n    $('#modal_users_add').modal('show');\n\n    if ($('#modal_users_add__group_id').val() == 2) {\n      toggleLeadsCompaniesField(2);\n    }\n\n    permissionFields(null, $('#modal_users_add__group_id').val());\n  });\n  $('#modal_users_add__save').click(function (e) {\n    e.preventDefault();\n    var self = $(this);\n    self.prop('disabled', true);\n    var data = {\n      user_id: userId,\n      email: $('#modal_users_add__email').val(),\n      password: $('#modal_users_add__password').val(),\n      group_id: $('#modal_users_add__group_id').val(),\n      activation: $('#modal_users_add__activation').val(),\n      lang: $('#modal_users_add__lang').val(),\n      firstName: $('#modal_users_add__firstName').val(),\n      lastName: $('#modal_users_add__lastName').val(),\n      phone: $('#modal_users_add__phone').val(),\n      account: $('#modal_users_add__account').val(),\n      _token: $('input[name=_token]').val()\n    };\n\n    if ($('#modal_users_RecruitmentDirector_id').length && $('#modal_users_RecruitmentDirector_field').hasClass('active')) {\n      data.user_id = $('#modal_users_RecruitmentDirector_id').val();\n    }\n\n    if ($('#modal_users_leads_companies_field').length) {\n      data.leads_settings = $('#modal_users_leads_companies_select').val();\n    }\n\n    if ($('#modal_users_add__permission').length) {\n      data.permissions = [];\n      $('input[name=\"permission[]\"]:checked').each(function () {\n        data.permissions.push($(this).val());\n      });\n      $('select[name=\"permission[]\"]:not(:disabled)').each(function () {\n        if ($(this).val()) {\n          $(this).val().forEach(function (arg) {\n            data.permissions.push(arg);\n          });\n        }\n      });\n    }\n\n    var id = $('#modal_users_add__id').val();\n\n    if (id !== '') {\n      data.id = id;\n    }\n\n    $.ajax({\n      url: '/users/add',\n      method: 'post',\n      data: data,\n      success: function success(response, status, xhr, $form) {\n        if (response.error) {\n          toastr.error(response.error);\n        } else {\n          $('#modal_users_add').modal('hide');\n\n          if (window.dTables) {\n            dTables.forEach(function (tbl) {\n              tbl.draw();\n            });\n          }\n        }\n\n        self.prop('disabled', false);\n      }\n    });\n  });\n  $('#modal_users_add__group_id').on('change', function () {\n    toggleRecruitmentDirectorField($(this).val());\n    toggleLeadsCompaniesField($(this).val());\n    permissionFields(null, $(this).val());\n  });\n  new Dropzone(\"#kt_ecommerce_add_product_media\", {\n    url: \"/files/user/add\",\n    // Set the url for your upload script location\n    paramName: \"file\",\n    maxFiles: 1,\n    maxFilesize: 5,\n    acceptedFiles: \".jpeg,.jpg,.png,.gif,.pdf\",\n    addRemoveLinks: true,\n    sending: function sending(file, xhr, formData) {\n      formData.append('_token', $('input[name=_token]').val());\n      formData.append('user_id', $('#modal_users_add__id').val());\n    },\n    success: function success(file, done) {\n      $('#modal_users_add__id').val(done.user_id);\n    },\n    accept: function accept(file, done) {\n      done();\n    }\n  });\n\n  if ($('#modal_users_leads_companies_select').length) {\n    $('#modal_users_leads_companies_select').select2({\n      placeholder: 'Поиск пакета',\n      ajax: {\n        url: \"/search/leads/settings\",\n        dataType: 'json',\n        data: function data(params) {\n          return {\n            s: '',\n            f_search: params.term\n          };\n        },\n        processResults: function processResults(data) {\n          var results = [];\n          $.each(data, function (index, item) {\n            results.push({\n              id: item.id,\n              text: item.value\n            });\n          });\n          return {\n            results: results\n          };\n        }\n      }\n    });\n  }\n\n  if ($('#modal_users_RecruitmentDirector_id').length) {\n    $('#modal_users_RecruitmentDirector_id').select2({\n      placeholder: 'Поиск руководителя',\n      minimumResultsForSearch: 5,\n      ajax: {\n        url: \"/search/user/all\",\n        dataType: 'json',\n        data: function data(params) {\n          return {\n            s: '',\n            f_search: params.term\n          };\n        },\n        processResults: function processResults(data) {\n          var results = [];\n          $.each(data, function (index, item) {\n            results.push({\n              id: item.id,\n              text: item.value\n            });\n          });\n          return {\n            results: results\n          };\n        }\n      }\n    }).on('select2:open', function () {\n      $('input.select2-search__field').focus();\n    });\n  }\n\n  $('body').on('change', '.js-permission-checkbox', function () {\n    if ($(this).prop('checked')) {\n      $('#js-' + $(this).val() + '-permission-children').show().find('.js-permissions-select').prop('disabled', false);\n    } else {\n      $('#js-' + $(this).val() + '-permission-children').hide().find('.js-permissions-select').prop('disabled', true);\n    }\n  });\n});\n\nwindow.generatePassword = function generatePassword() {\n  var length = 11,\n      charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n      retVal = \"\";\n\n  for (var i = 0, n = charset.length; i < length; ++i) {\n    retVal += charset.charAt(Math.floor(Math.random() * n));\n  }\n\n  $('#modal_users_add__password').val(retVal);\n};\n\nwindow.editUser = function editUser(id) {\n  $('.dz-preview').remove();\n  $('.dz-message').show();\n\n  if (group != 1) {\n    $('#modal_users_add__group_id').html('');\n    allRoles.forEach(function (role) {\n      if (permissions.includes('user.edit.role.' + role.id)) {\n        $('#modal_users_add__group_id').append(new Option(role.name, role.id));\n      }\n    });\n  }\n\n  $.get('/users/ajax/id/' + id, function (res) {\n    $('#modal_users_add__id').val(id);\n    $('#modal_users_add__email').val(res.user.email);\n    $('#modal_users_add__firstName').val(res.user.firstName);\n    $('#modal_users_add__lastName').val(res.user.lastName);\n    $('#modal_users_add__phone').val(res.user.phone);\n    $('#modal_users_add__account').val(res.user.account);\n    $('#modal_users_add__group_id').val(res.user.group_id);\n    $('#modal_users_add__activation').val(res.user.activation);\n    $('#modal_users_add__lang').val(res.user.lang);\n\n    if ($('#modal_users_RecruitmentDirector_id').length) {\n      $('#modal_users_RecruitmentDirector_id').html('');\n\n      if (res.user.supervisor) {\n        $('#modal_users_RecruitmentDirector_id').append(new Option(res.user.supervisor, res.user.user_id, true, true));\n      } // toggleRecruitmentDirectorField(res.user.group_id);\n\n    }\n\n    if ($('#modal_users_leads_companies_field').length) {\n      $('#modal_users_leads_companies_select').html('');\n      toggleLeadsCompaniesField(res.user.group_id);\n\n      if (res.user.leads_settings) {\n        res.user.leads_settings.forEach(function (lc) {\n          $('#modal_users_leads_companies_select').append(new Option(lc.name, lc.id, true, true)).trigger('change');\n        });\n      }\n    }\n\n    permissionFields(res.user.permissions, res.user.group_id);\n    $('#modal_users_add').modal('show');\n  });\n};\n\nwindow.changeActivation = function changeActivation(id) {\n  var changeActivation = $('.changeActivation' + id).val();\n  $.get('/users/activation?s=' + changeActivation + '&id=' + id, function (res) {\n    if (res.error) {\n      toastr.error(res.error);\n    } else {\n      toastr.success('Успешно');\n    }\n  });\n};\n\nfunction toggleRecruitmentDirectorField(group_id) {// if ($('#modal_users_RecruitmentDirector_field').length) {\n  //     if (group_id == '2' || group_id == '4' || group_id == '8' || group_id == '10') {\n  //         $('#modal_users_RecruitmentDirector_field').show().addClass('active');\n  //     } else {\n  //         $('#modal_users_RecruitmentDirector_field').hide().removeClass('active');\n  //         $('#modal_users_RecruitmentDirector_id').val('');\n  //     }\n  // }\n}\n\nfunction toggleLeadsCompaniesField(group_id) {\n  if ($('#modal_users_leads_companies_field').length) {\n    if (group_id == '2') {\n      $('#modal_users_leads_companies_field').show();\n    } else {\n      $('#modal_users_leads_companies_field').hide();\n      $('#modal_users_leads_companies_select').html('');\n    }\n  }\n}\n\nfunction permissionFields(curPermissions, group_id) {\n  if ($('#modal_users_add__permission').length) {\n    $('#modal_users_add__permission').html('');\n    $.get('/permissions/get/' + group_id, function (permissions) {\n      for (var key in permissions) {\n        if (Object.hasOwnProperty.call(permissions, key)) {\n          var name = permissions[key].name;\n          var showChildren = false;\n\n          if (curPermissions && curPermissions.includes(key)) {\n            showChildren = true;\n          }\n\n          $('#modal_users_add__permission').append(\"<div class=\\\"d-flex form-check form-check-sm form-check-custom form-check-solid mt-5\\\" style=\\\"align-items: center; gap: 10px\\\"> \\n                        <input id=\\\"permission-checkbox-\".concat(key, \"\\\" class=\\\"js-permission-checkbox form-check-input\\\" type=\\\"checkbox\\\" name=\\\"permission[]\\\" value=\\\"\").concat(key, \"\\\"\\n                        \").concat(curPermissions && curPermissions.includes(key) ? ' checked' : '', \">\\n                        <label for=\\\"permission-checkbox-\").concat(key, \"\\\">\").concat(name, \"</label>\\n                    </div>\"));\n\n          if (permissions[key].children) {\n            var options = Object.values(permissions[key].children).map(function (opt) {\n              return '<option value=\"' + opt.key + '\" ' + (curPermissions && curPermissions.includes(opt.key) ? ' selected' : '') + '>' + opt.name + '</option>';\n            });\n            $('#modal_users_add__permission').append(\"<div \".concat(showChildren ? '' : 'style=\"display: none\"', \" id=\\\"js-\").concat(key, \"-permission-children\\\">\\n                        <select name=\\\"permission[]\\\" class=\\\"form-select form-select-sm form-select-solid js-permissions-select mt-3\\\" multiple \").concat(showChildren ? '' : 'disabled', \">\").concat(options, \"</select></div>\"));\n          }\n        }\n      }\n\n      $('.js-permissions-select').select2({\n        placeholder: 'Разрешения'\n      });\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/users.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/users.js"]();
/******/ 	
/******/ })()
;