/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/add-client.js":
/*!************************************!*\
  !*** ./resources/js/add-client.js ***!
  \************************************/
/***/ (() => {

eval("\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n$(function () {\n  $('#industry_id').select2({\n    placeholder: 'Поиск отрасли',\n    ajax: {\n      url: \"/search/client/industry\",\n      dataType: 'json',\n      data: function data(params) {\n        return {\n          s: '',\n          f_search: params.term\n        };\n      },\n      processResults: function processResults(data) {\n        var results = [];\n        $.each(data, function (index, item) {\n          results.push({\n            id: item.id,\n            text: item.value\n          });\n        });\n        return {\n          results: results\n        };\n      }\n    }\n  });\n  $('#work_place_id').select2({\n    placeholder: 'Место работы',\n    ajax: {\n      url: \"/search/client/workplace\",\n      dataType: 'json',\n      data: function data(params) {\n        return {\n          s: '',\n          f_search: params.term\n        };\n      },\n      processResults: function processResults(data) {\n        var results = [];\n        $.each(data, function (index, item) {\n          results.push({\n            id: item.id,\n            text: item.value\n          });\n        });\n        return {\n          results: results\n        };\n      }\n    }\n  });\n  $('#nationality_id').select2({\n    placeholder: 'Национальность',\n    ajax: {\n      url: \"/search/client/nationality\",\n      dataType: 'json',\n      data: function data(params) {\n        return {\n          s: '',\n          f_search: params.term\n        };\n      },\n      processResults: function processResults(data) {\n        var results = [];\n        $.each(data, function (index, item) {\n          results.push({\n            id: item.id,\n            text: item.value\n          });\n        });\n        return {\n          results: results\n        };\n      }\n    }\n  });\n  $('#housing_id').select2({\n    placeholder: 'Жилье',\n    ajax: {\n      url: \"/search/housing\",\n      dataType: 'json',\n      data: function data(params) {\n        return {\n          s: '',\n          f_search: params.term\n        };\n      },\n      processResults: function processResults(data) {\n        var results = [];\n        $.each(data, function (index, item) {\n          results.push({\n            id: item.id,\n            text: item.value\n          });\n        });\n        return {\n          results: results\n        };\n      }\n    }\n  });\n  $('#work_time_format').select2({\n    placeholder: 'Формат',\n    minimumResultsForSearch: Infinity\n  });\n  $('#coordinator_id').select2({\n    placeholder: 'Координатор',\n    ajax: {\n      url: \"/search/user/all\",\n      dataType: 'json',\n      data: function data(params) {\n        return {\n          s: '',\n          f_search: params.term\n        };\n      },\n      processResults: function processResults(data) {\n        var results = [];\n        $.each(data, function (index, item) {\n          results.push({\n            id: item.id,\n            text: item.value\n          });\n        });\n        return {\n          results: results\n        };\n      }\n    }\n  });\n  $('#add_contact').click(function () {\n    var html = $('#template_add').html();\n    $('.contacts').append(html);\n  });\n  $(document).on('click', '.delete_contact', function () {\n    $(this).parent().parent().parent().remove();\n  });\n  $('#save_vacancies').click(function (e) {\n    e.preventDefault();\n    var self = $(this);\n    self.prop('disabled', true);\n    var data = {\n      name: $('#name').val(),\n      coordinator_id: $('#coordinator_id').val(),\n      address: $('#address').val(),\n      industry_id: $('#industry_id').val().join(','),\n      work_place_id: $('#work_place_id').val().join(','),\n      nationality_id: $('#nationality_id').val().join(','),\n      work_time_format: $('#work_time_format').val(),\n      min_work_time: $('#min_work_time').val(),\n      active: $('#active').val(),\n      _token: $('input[name=_token]').val()\n    };\n\n    if ($('#housing_id').val()) {\n      data.housing_id = $('#housing_id').val().join(',');\n    }\n\n    var id = $('#id').val();\n\n    if (id !== '') {\n      data.id = id;\n    }\n\n    var contacts = [];\n    $('.contacts .contact').each(function () {\n      var firstName = $(this).find('.cfirstName').val();\n      var lastName = $(this).find('.clastName').val();\n      var position = $(this).find('.cposition').val();\n      var phone = $(this).find('.cphone').val();\n      var email = $(this).find('.cemail').val();\n\n      if (firstName == '') {\n        toastr.error('Имя контакта обязательное поле!');\n        self.prop('disabled', false);\n        return '';\n      }\n\n      if (phone == '') {\n        toastr.error('Телефон контакта обязательное поле!');\n        self.prop('disabled', false);\n        return '';\n      }\n\n      contacts.push([firstName, lastName, position, phone, email]);\n    });\n\n    if (contacts.length === 0) {\n      toastr.error('Добавте хоть один контакт!');\n      self.prop('disabled', false);\n      return '';\n    }\n\n    data.contacts = JSON.stringify(contacts);\n    var positions = [];\n    $('#client-positions-container .client-position').each(function () {\n      var description = $(this).find('[name=\"description[]\"]').val();\n      var title = $(this).find('[name=\"title[]\"]').val();\n      var id = $(this).find('[name=\"title[]\"]').attr('data-id');\n      var rates = [];\n      $(this).find('.position-rate').each(function () {\n        var start_at = $(this).find('[name=\"start_at[]\"]').val();\n        var type = $(this).find('[name=\"type[]\"]').val();\n        var amount = $(this).find('[name=\"amount[]\"]').val();\n        var id = $(this).find('[name=\"amount[]\"]').attr('data-id');\n        rates.push({\n          start_at: start_at,\n          type: type,\n          amount: amount,\n          id: id\n        });\n      });\n      positions.push({\n        rates: rates,\n        description: description,\n        title: title,\n        id: id\n      });\n    });\n\n    if (positions.length === 0) {\n      toastr.error('Добавте хоть одну должность!');\n      self.prop('disabled', false);\n      return;\n    } else {\n      var type_rate = 0;\n      var type_rate_after = 0;\n      var type_personal_rate = 0;\n\n      var _iterator = _createForOfIteratorHelper(positions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pos = _step.value;\n\n          if (pos.title == '') {\n            toastr.error('Заголовок должности - обязательное поле!');\n            self.prop('disabled', false);\n            return;\n          }\n\n          if (pos.rates.length < 3) {\n            toastr.error('Добавьте три ставки для каждой должности. Ставку, ставку после 3 месяца, ставку от клиента brutto');\n            self.prop('disabled', false);\n            return;\n          } // for (const rate of pos.rates) {\n          //     if (rate.type == '') {\n          //         toastr.error('Тип ставки - обязательное поле!');\n          //         self.prop('disabled', false);\n          //         return;\n          //     }\n          //     if (rate.start_at == '') {\n          //         toastr.error('Начало действия - обязательное поле!');\n          //         self.prop('disabled', false);\n          //         return;\n          //     }\n          //     if (rate.amount == '') {\n          //         toastr.error('Ставка - обязательное поле!');\n          //         self.prop('disabled', false);\n          //         return;\n          //     }\n          //     if (rate.type == 'rate') {\n          //         type_rate++;\n          //     }\n          //     if (rate.type == 'rate_after') {\n          //         type_rate_after++;\n          //     }\n          //     if (rate.type == 'personal_rate') {\n          //         type_personal_rate++;\n          //     }\n          // }\n          // if (!type_rate) {\n          //     toastr.error('Добавьте cтавку');\n          //     self.prop('disabled', false);\n          //     return;\n          // }\n          // if (!type_rate_after) {\n          //     toastr.error('Добавьте ставку после 3 месяца');\n          //     self.prop('disabled', false);\n          //     return;\n          // }\n          // if (!type_personal_rate) {\n          //     toastr.error('Добавьте ставку от клиента brutto');\n          //     self.prop('disabled', false);\n          //     return;\n          // }\n\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    data.positions = JSON.stringify(positions);\n    $.ajax({\n      url: \"/client/add\",\n      method: 'post',\n      data: data,\n      success: function success(response, status, xhr, $form) {\n        if (response.error) {\n          toastr.error(response.error);\n        } else {\n          location.href = '/clients';\n        }\n\n        self.prop('disabled', false);\n      }\n    });\n  });\n\n  if (clientOpt.Coordinator) {\n    $('#coordinator_id').append(new Option(clientOpt.Coordinator[1], clientOpt.Coordinator[0], true, true)).trigger('change');\n  }\n\n  if (clientOpt.h_v_industry) {\n    clientOpt.h_v_industry.forEach(function (industry) {\n      $('#industry_id').append(new Option(industry[1], industry[0], true, true)).trigger('change');\n    });\n  }\n\n  if (clientOpt.h_v_city) {\n    clientOpt.h_v_city.forEach(function (city) {\n      $('#work_place_id').append(new Option(city[1], city[0], true, true)).trigger('change');\n    });\n  }\n\n  if (clientOpt.h_v_nationality) {\n    clientOpt.h_v_nationality.forEach(function (nationality) {\n      $('#nationality_id').append(new Option(nationality[1], nationality[0], true, true)).trigger('change');\n    });\n  }\n\n  if (clientOpt.h_v_housing) {\n    clientOpt.h_v_housing.forEach(function (housing) {\n      $('#housing_id').append(new Option(housing[1], housing[0], true, true)).trigger('change');\n    });\n  }\n\n  if (clientOpt.work_time_format) {\n    $('#work_time_format').val(clientOpt.work_time_format).trigger('change');\n  }\n\n  $('body').on('click', '#add-client-position', function () {\n    var tplHtml = $('#position-template').html();\n    var rateTplHtml = $('#rate-template').html();\n    var $container = $('#client-positions-container');\n    $container.append(tplHtml);\n    var $ratesContainer = $container.find('.client-position').last().find('.position-rates-container');\n    $ratesContainer.append(rateTplHtml.replace('value=\"rate\"', 'value=\"rate\" selected'));\n    $ratesContainer.append(rateTplHtml.replace('value=\"rate_after\"', 'value=\"rate_after\" selected'));\n    $ratesContainer.append(rateTplHtml.replace('value=\"personal_rate\"', 'value=\"personal_rate\" selected'));\n    $('.js-rate-date:not([readonly])').flatpickr({\n      dateFormat: 'd.m.Y',\n      locale: {\n        firstDayOfWeek: 1\n      }\n    });\n  }).on('click', '.js-delete-client-position', function () {\n    var $contact = $(this).closest('.client-position');\n    $contact.remove();\n  }).on('click', '.js-add-rate', function () {\n    $(this).hide();\n    var rateTplHtml = $('#rate-template').html();\n    var $container = $(this).closest('.client-position').find('.position-rates-container');\n    $container.append(rateTplHtml.replace('value=\"rate\"', 'value=\"rate\" selected'));\n    $container.append(rateTplHtml.replace('value=\"rate_after\"', 'value=\"rate_after\" selected'));\n    $container.append(rateTplHtml.replace('value=\"personal_rate\"', 'value=\"personal_rate\" selected'));\n    $container.next('.js-no-rate-msg').hide();\n    $container.find('.js-rate-date:not([readonly])').flatpickr({\n      dateFormat: 'd.m.Y',\n      locale: {\n        firstDayOfWeek: 1\n      }\n    });\n  });\n  $('.js-rate-date:not([readonly])').flatpickr({\n    dateFormat: 'd.m.Y',\n    locale: {\n      firstDayOfWeek: 1\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/add-client.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/add-client.js"]();
/******/ 	
/******/ })()
;