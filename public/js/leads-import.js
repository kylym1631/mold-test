/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/leads-import.js":
/*!**************************************!*\
  !*** ./resources/js/leads-import.js ***!
  \**************************************/
/***/ (() => {

eval("\n\nvar filePath = '';\n$(function () {\n  $('body').on('click', '#send-excel-file', function () {\n    var _this = this;\n\n    var inpFile = $('#excel-file');\n\n    if (!inpFile[0].files.length) {\n      return;\n    }\n\n    $(this).prop('disabled', true).attr('data-kt-indicator', 'on');\n    var fD = new FormData();\n    fD.append('_token', $('input[name=_token]').val());\n    fD.append('file', inpFile[0].files[0], inpFile[0].files[0].name);\n    $.ajax({\n      url: '/leads/import/upload',\n      method: 'POST',\n      data: fD,\n      dataType: 'json',\n      contentType: false,\n      processData: false,\n      success: function success(response) {\n        $(_this).prop('disabled', false).attr('data-kt-indicator', 'off');\n\n        if (response.error) {\n          toastr.error(response.error);\n          return;\n        }\n\n        filePath = response.path;\n        buildTable(response.data);\n      }\n    });\n  }).on('click', '#import-excel-file', function () {\n    var _this2 = this;\n\n    $(this).prop('disabled', true).attr('data-kt-indicator', 'on');\n    var colSel = $('.js-column-select');\n    var fD = new FormData();\n    colSel.each(function () {\n      var val = $(this).val();\n\n      if (val) {\n        fD.append('column_ind[]', $(this).attr('data-index'));\n        fD.append('column_name[]', val);\n      }\n    });\n    fD.append('_token', $('input[name=_token]').val());\n    fD.append('file_path', filePath);\n\n    if ($('#exclude-first-row').prop('checked')) {\n      fD.append('exclude_first_row', 1);\n    }\n\n    $.ajax({\n      url: '/leads/import/process',\n      method: 'POST',\n      data: fD,\n      dataType: 'json',\n      contentType: false,\n      processData: false,\n      success: function success(response) {\n        $(_this2).prop('disabled', false).attr('data-kt-indicator', 'off');\n\n        if (response.error) {\n          toastr.error(response.error);\n          return;\n        }\n\n        window.location.replace('/leads');\n      }\n    });\n  });\n});\n\nfunction buildTable(data) {\n  var trArr = [];\n  var tdLength = 0;\n  data.forEach(function (tr) {\n    var tdS = '';\n    tdLength = tr.length;\n    tr.forEach(function (td) {\n      tdS += '<td>' + td + '</td>';\n    });\n    trArr.push(tdS);\n  });\n  var selectors = '';\n\n  for (var i = 0; i < tdLength; i++) {\n    selectors += \"<th>\\n                        <select data-index=\\\"\".concat(i, \"\\\"\\n                            class=\\\"js-column-select form-select form-select-sm form-select-solid\\\">\\n                            <option></option>\\n                            <option value=\\\"date\\\">\\u0414\\u0430\\u0442\\u0430</option>\\n                            <option value=\\\"company\\\">\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F</option>\\n                            <option value=\\\"name\\\">\\u0418\\u043C\\u044F</option>\\n                            <option value=\\\"phone\\\">\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D</option>\\n                            <option value=\\\"viber\\\">Viber</option>\\n                        </select>\\n                    </th>\");\n  }\n\n  trArr.unshift(selectors);\n  $('#xls-table-wrap').show();\n  $('#xls-table').html('<tr>' + trArr.join('</tr><tr>') + '</tr>');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/leads-import.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/leads-import.js"]();
/******/ 	
/******/ })()
;